#!/bin/bash

export PATH=$PATH:/orientdb/bin

# macOS needs -Dstorage.disk.useNativeOsAPI=false -Dstorage.wal.allowDirectIO=false for 3.0.28-30
if [ -f /openedrserver/.macOS ]; then
  echo "using macOS start up options..."
  MORE_OPTIONS="-Dstorage.disk.useNativeOsAPI=false -Dstorage.wal.allowDirectIO=false"
else
  MORE_OPTIONS=""
fi

exit_script() {
  echo "OrientDB: Caught sigterm..."
  shutdown.sh
  wait $child
}

trap exit_script SIGINT SIGTERM

if [ ! -f /openedrserver/orientdb/import_completed ]; then
    # Reset the configuration 
    # cp /orientdb/config/orientdb-server-config.xml.template /orientdb/config/orientdb-server-config.xml

    # this will wipe everything, copy databases sub-dir out if you want to upgrade ODB-CE version
    rm -rf /openedrserver/orientdb/odb/*
    # downloaded from https://repo1.maven.org/maven2/com/orientechnologies/
    tar zxvf /openedrserver/orientdb/orientdb-community*.tar.gz --strip 1 --directory /openedrserver/orientdb/odb
    
    # generate new credentials
    export ORIENTDB_ROOT_PASSWORD=`< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;`
    export ORIENTDB_WRITER_PASSWORD=`< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;`
    export ORIENTDB_HOME=/orientdb

    # generate environment config files - writer account for backend scripts
    echo "ORIENTDB_HOST=orientdb" >> /openedrserver/.env
    echo "ORIENTDB_PORT=2424" >> /openedrserver/.env
    echo "ORIENTDB_NAME=DataFusion" >> /openedrserver/.env
    echo "ORIENTDB_USER=writer" >> /openedrserver/.env
    echo "ORIENTDB_PASSWORD=$ORIENTDB_WRITER_PASSWORD" >> /openedrserver/.env
    # Backend container hosting the nodeJS script will also see the same path
    chmod 600 /openedrserver/.env

    # root account for full database export scripts
    echo "ORIENTDB_HOST=orientdb" > /openedrserver/backend/exportScripts/.env
    echo "ORIENTDB_PORT=2424" >> /openedrserver/backend/exportScripts/.env
    echo "ORIENTDB_NAME=DataFusion" >> /openedrserver/backend/exportScripts/.env
    echo "ORIENTDB_USER=root" >> /openedrserver/backend/exportScripts/.env
    echo "ORIENTDB_PASSWORD=$ORIENTDB_ROOT_PASSWORD" >> /openedrserver/backend/exportScripts/.env
    chmod 600 /openedrserver/backend/exportScripts/.env
    
    server.sh $MORE_OPTIONS -Dlog.console.level=FINE &
    child=$!
    
    echo ""
    echo "======================================="
    echo "Schema import will start in 20 seconds..."
    echo "======================================="
    echo ""
    # sleep 20
    echo "Wait for OrientDB..."
    while ! echo "" 2>/dev/null > /dev/tcp/orientdb/2424 ; do
      echo "Waiting for 5 secs..."
      sleep 5
    done

    echo "Creating database & importing schema..."
    console.sh "create database remote:localhost/DataFusion root $ORIENTDB_ROOT_PASSWORD; import database /openedrserver/backend/exportScripts/schema.gz;"

    echo "Importing server-side functions..."
    console.sh "use remote:localhost/DataFusion root $ORIENTDB_ROOT_PASSWORD; import database /openedrserver/backend/exportScripts/functions.json -merge=true -migrateLinks=false -rebuildIndexes=false;"

    echo "Importing Lineage Sequence"
    console.sh "use remote:localhost/DataFusion root $ORIENTDB_ROOT_PASSWORD; import database /openedrserver/backend/exportScripts/processSequence.json -merge=true -migrateLinks=false -rebuildIndexes=false;"
    
    echo "Importing CommandLineClusters"
    console.sh "use remote:localhost/DataFusion root $ORIENTDB_ROOT_PASSWORD; import database /openedrserver/backend/exportScripts/commandLineClusters.json -merge=true -migrateLinks=false -rebuildIndexes=false;"

    echo "Adding root & writer accounts..."
    console.sh "use remote:localhost/DataFusion root $ORIENTDB_ROOT_PASSWORD; update ouser set password='$ORIENTDB_WRITER_PASSWORD' where name = 'writer';"
    touch /openedrserver/orientdb/import_completed # need to delay the trigger since ODB takes time to start
    
    echo ""
    echo "======================================="
    echo "root password: "$ORIENTDB_ROOT_PASSWORD
    echo "======================================="
    echo "Restarting..."    
    # if we don' restart n container, somehow there's this result set not close warning...
    shutdown.sh 
    wait $child
else
    # see https://github.com/orientechnologies/orientdb/issues/9278
    server.sh $MORE_OPTIONS -Dlog.console.level=INFO &
    child=$!
    wait $child
fi
